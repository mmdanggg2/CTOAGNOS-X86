;        ___            ;
;       /\  \           ;
;       \:\  \          ;
;       /::\__\         ;
;    __/:/\/__/         ;
;   /\/:/  /  ___       ;
;   \::/__/  /\  \      ;
;    \:\__\ /::\  \     ;
;     \/__//:/\:\  \    ;
;         /::\ \:\  \   ;
;        /:/\:\ \:\__\  ;
;        \/__\:\/:/  /  ;
;             \::/  /   ;
;              \/__/    ;
;IP Painter v0.1
;created by h3xtEr
;WASD to control cursor
;F to toggle paint

:program_painter
jsr clear_screen
jsr draw_title_line
set j, 0xf300
jsr change_prev_back
jsr change_next_back
ife painter_run, 0
	jsr add_cursor
set [painter_run], 1
jsr modify_frame
jsr draw_keyboard_guide

:key_loop
	ifn [counter], 0
    	sub [counter], 1
    ife [counter], 0
		jsr draw_keyboard_guide
	set a, 1
    jsr key_inp
    ife c, 0
    	set pc, key_loop
    ife c, 0x77
    	jsr w_press
    ife c, 0x61
    	jsr a_press
    ife c, 0x73
    	jsr s_press
    ife c, 0x64
    	jsr d_press
    ife c, 0x66
    	jsr toggle
    
    set pc, key_loop
:draw_title_line
	set i, 0
:draw_title_line_loop
	set a, [title+i]
    bor a, 0xf000
    set [0x8000+i], a
    add i, 1
    ifn [title+i], 0
    	set pc, draw_title_line_loop
    set pc, pop

:draw_keyboard_guide
	set j, 0xf400
	jsr draw_w
    jsr draw_a
    jsr draw_s
    jsr draw_d
    jsr draw_f
    set pc, pop

:draw_w;arg j as back
	set a, 0x0057
    bor a, j
    set [0x80e1], a
    set [counter], 500
    set pc, pop

:draw_a
	set a, 0x0041
    bor a, j
    set [0x8100], a
    set [counter], 500
    set pc, pop

:draw_s
	set a, 0x0053
    bor a, j
    set [0x8101], a
    set [counter], 500
    set pc, pop
    
:draw_d
	set a, 0x0044
    bor a, j
    set [0x8102], a
    set [counter], 500
    set pc, pop

:draw_f
	set a, 0x0046
    bor a, j
    set [0x8103], a
    set [counter], 500
    set pc, pop

:change_prev_back;prev background change sub, arg j as back
	set i, 0
:change_prev_back_loop
	set a, [prev_text+i]
    bor a, j
    SET [0x8048+i], a
    add i, 1
    ifn [prev_text+i], 0
    	set pc, change_prev_back_loop
    set pc, pop

:change_next_back;next background change sub, arg j as back
	set i, 0
:change_next_back_loop
	set a, [next_text+i]
    bor a, j
    SET [0x8052+i], a
    add i, 1
    ifn [next_text+i], 0
    	set pc, change_next_back_loop
    set pc, pop

:add_cursor
	set a, [last_cursor]
    set b, [cursor]
	sub [frame+a], 0xc
    xor [frame+a], 0xff00
    add [frame+b], 0xc
    xor [frame+b], 0xff00
    set pc, pop
    
:w_press
	set j, 0xf200
    jsr draw_w
	set [last_cursor], [cursor]
	ifl [cursor], 0x14
    	add [cursor], 0xa0
    ifg [cursor], 0x13
	    sub [cursor], 0x14
    jsr add_cursor
    jsr modify_frame
    set pc, pop

:a_press
	set j, 0xf200
    jsr draw_a
	set [last_cursor], [cursor]
	set a, [cursor]
    mod a, 0x14
    ife a, 0
    	add [cursor], 0x13
	ifn a, 0
    	sub [cursor], 1
    jsr add_cursor
    jsr modify_frame
    set pc, pop

:s_press
	set j, 0xf200
    jsr draw_s
	set [last_cursor], [cursor]
    set a, [cursor]
	ifg a, 0x8b
    	sub [cursor], 0x8c
    ifl a, 0x8c
    	add [cursor], 0x14
    jsr add_cursor
    jsr modify_frame
    set pc, pop

:d_press
	set j, 0xf200
    jsr draw_d
	set [last_cursor], [cursor]
	set a, [cursor]
    set b, a
    add a, 1
    mod a, 0x14
    ife a, 0
    	sub [cursor], 0x13
	ifn a, 0
    	add [cursor], 1
    jsr add_cursor
    jsr modify_frame
    set pc, pop
    
:toggle
	set j, 0xf200
    jsr draw_f
	set a, [cursor]
    xor [frame+a], 0xff00
    jsr modify_frame
	set pc, pop

:modify_frame
	set i, 0
    set j, 0x8086
:modify_frame_loop
	set a, [frame+i]
    set [j], a
    add i, 1
	add j, 1
	set c, i
    mod c, 0x14
	ife c, 0
    	add j, 0xc
    ifn [frame+i], 0
    	set pc, modify_frame_loop
    set pc, pop
:title
dat "     INTERPLANETARY PAINTER     ", 0
:prev_text
dat "by", 0
:next_text
dat "h3xtEr", 0
:frame
dat 0x0f2b, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0xf01f, 0
:cursor
dat 0
:last_cursor
dat 0
:counter
dat 0
:painter_run
dat 0